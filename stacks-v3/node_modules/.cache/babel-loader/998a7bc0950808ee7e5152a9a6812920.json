{"ast":null,"code":"var _jsxFileName = \"/Users/benreimer/Develop/stacks/stacks-v3/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n//my own way\n\nif (navigator.serviceWorker) {\n  // Register the SW\n  navigator.serviceWorker.register('/sw.js').then(function (registration) {}).catch(console.log);\n}","map":{"version":3,"sources":["/Users/benreimer/Develop/stacks/stacks-v3/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","navigator","register","then","registration","catch","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;AACA;AAGA;;AAEA,IAAIC,SAAS,CAACJ,aAAd,EAA6B;AAE3B;AACAI,EAAAA,SAAS,CAACJ,aAAV,CAAwBK,QAAxB,CAAiC,QAAjC,EAA2CC,IAA3C,CAAgD,UAACC,YAAD,EAAkB,CAEjE,CAFD,EAEGC,KAFH,CAESC,OAAO,CAACC,GAFjB;AAGD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\n//my own way\n\nif (navigator.serviceWorker) {\n\n  // Register the SW\n  navigator.serviceWorker.register('/sw.js').then((registration) => {\n\n  }).catch(console.log);\n}\n"]},"metadata":{},"sourceType":"module"}