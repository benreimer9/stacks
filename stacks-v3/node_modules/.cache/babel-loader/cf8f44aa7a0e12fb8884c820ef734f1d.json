{"ast":null,"code":"import _classCallCheck from \"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/src/Components/ViewStacks.js\";\nimport React, { Component } from 'react';\nimport Stack from './Stack';\nimport '../App.css';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport AnimateHeight from 'react-animate-height';\n/**************\nHolds the Daily Stacks View\n\n\nTO DO\n\n- 'add' button\n  - addOptions\n  - cancel\n\n- display stacks and habits\n\n- display empty stacks component if no stacks\n\n**************/\n\nvar SortableContainer = sortableContainer(function (_ref) {\n  var children = _ref.children;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, children);\n});\n\nvar ViewStacks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewStacks, _Component);\n\n  function ViewStacks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewStacks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewStacks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.addHabit = function (itemPos, stackID) {\n      //recognize which was clicked\n      //input module (toggle off touchspots)\n      //submit to right place\n      //console.log(\"item pos is : \" + itemPos + \" and stackID is : \" + stackID);\n      _this.setState({\n        inputtingNewHabit: true\n      }); //but this should only be taken once form is filled out.\n\n\n      var cue = _this.state.newHabit.cue;\n      var action = _this.state.newHabit.action;\n      var newStack = _this.state.stacks;\n      newStack[stackID].stack.habits.splice(itemPos, 0, {\n        cue: cue,\n        action: action,\n        result: \"blank\",\n        fn: \"\"\n      });\n\n      _this.setState({\n        stacks: newStack\n      }); // this.cancelNew();\n\n    };\n\n    _this.logHabits = function (itemPos, stackID) {\n      var h = _this.state.stacks[stackID].stack.habits;\n      var newH = h.map(function (habit, i) {\n        if (i <= itemPos) {\n          habit.result = \"success\";\n        } else {\n          habit.result = \"failure\";\n        }\n      });\n\n      if (itemPos === h.length - 1) {\n        console.log(\"SUCCESS\");\n      }\n\n      _this.setState({\n        h: newH\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewStacks, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /**************\n      Logic\n      **************/\n      var stacks = this.props.stacks.stacks;\n      return React.createElement(SortableContainer, {\n        onSortEnd: this.props.onSortEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, stacks.map(function (items, index) {\n        return React.createElement(Stack, {\n          stacksItems: items,\n          stacksIndex: index,\n          key: index,\n          stacksInfo: _this2.props.stacksInfo,\n          height: _this2.props.stacksInfo[index].height,\n          streak: _this2.props.stacksInfo[index].streak,\n          toggleStack: _this2.props.toggleStack,\n          logHabit: _this2.props.logHabit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return ViewStacks;\n}(Component);\n\nexport default ViewStacks;","map":{"version":3,"sources":["/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/src/Components/ViewStacks.js"],"names":["React","Component","Stack","sortableContainer","AnimateHeight","SortableContainer","children","ViewStacks","addHabit","itemPos","stackID","setState","inputtingNewHabit","cue","state","newHabit","action","newStack","stacks","stack","habits","splice","result","fn","logHabits","h","newH","map","habit","i","length","console","log","props","onSortEnd","items","index","stacksInfo","height","streak","toggleStack","logHabit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Stack from './Stack';\nimport '../App.css';\nimport {sortableContainer} from 'react-sortable-hoc';\nimport AnimateHeight from 'react-animate-height';\n\n\n/**************\nHolds the Daily Stacks View\n\n\nTO DO\n\n- 'add' button\n  - addOptions\n  - cancel\n\n- display stacks and habits\n\n- display empty stacks component if no stacks\n\n**************/\n\n\n\nconst SortableContainer = sortableContainer(({children}) => {\n  return <div>{children}</div>;\n});\n\n\n\nclass ViewStacks extends Component {\n\n\n\n  // displayStacks = (stacks) => {\n  //\n  //   if (stacks.length !== 0) {\n  //\n  //     let stacksInJSX = [];\n  //     let visiblility = null;\n  //\n  //     stacks.forEach((stack, i) => {\n  //       stacksInJSX.push(\n  //         <Stack\n  //           name={stack.name}\n  //           key={i}\n  //           id={i}\n            // height={stack.height}\n            // streak={stack.streak}\n            // habits={stack.habits}\n            // toggleStack={this.props.toggleStack}\n  //           onSortEnd={this.props.onSortEnd}\n  //           />\n  //       )\n  //     });\n  //     return stacksInJSX;\n  //   }\n  //   else {\n  //     return <p>Tap + to add stacks, habits, & friends</p>\n  //   }\n  // }\n\n\n  //to draw from :\n  addHabit = (itemPos, stackID) => {\n    //recognize which was clicked\n    //input module (toggle off touchspots)\n    //submit to right place\n\n    //console.log(\"item pos is : \" + itemPos + \" and stackID is : \" + stackID);\n\n    this.setState({inputtingNewHabit:true});\n\n\n    //but this should only be taken once form is filled out.\n\n    let cue = this.state.newHabit.cue;\n    let action = this.state.newHabit.action;\n\n\n\n    let newStack = this.state.stacks;\n    newStack[stackID].stack.habits.splice(itemPos, 0, {cue:cue, action:action, result:\"blank\", fn:\"\"});\n    this.setState({stacks : newStack});\n    // this.cancelNew();\n  }\n  logHabits = (itemPos, stackID) => {\n\n    let h = this.state.stacks[stackID].stack.habits;\n\n    let newH = h.map((habit, i) => {\n      if (i <= itemPos){\n        habit.result = \"success\";\n      }\n      else {\n        habit.result =\"failure\";\n      }\n    });\n\n    if (itemPos === h.length-1){\n      console.log(\"SUCCESS\");\n    }\n\n    this.setState({h:newH});\n\n  }\n\n\n\n\n  render() {\n\n    /**************\n    Logic\n    **************/\n    const {stacks} = this.props.stacks;\n\n    return (\n\n      <SortableContainer onSortEnd={this.props.onSortEnd}>\n\n        {stacks.map((items, index) => (\n          <Stack\n            stacksItems={items}\n            stacksIndex={index}\n            key={index}\n            stacksInfo={this.props.stacksInfo}\n            height={this.props.stacksInfo[index].height}\n            streak={this.props.stacksInfo[index].streak}\n            toggleStack={this.props.toggleStack}\n            logHabit={this.props.logHabit}\n          />\n        ))}\n    </SortableContainer>\n\n    );\n  }\n}\n\n\n\nexport default ViewStacks;\n"]},"metadata":{},"sourceType":"module"}