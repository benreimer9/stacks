{"ast":null,"code":"var _jsxFileName = \"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/stacks-v2/src/Components/Stack.js\";\nimport React from 'react';\nimport '../App.css';\nimport Habit from './Habit';\nimport AnimateHeight from 'react-animate-height';\n/**************\nStack Component\n\nis it bad I affect the DOM with the toggleStack() ?\n**************/\n\nfunction displayHabits(stack) {\n  if (stack.length !== 0) {\n    var habitsInJSX = [];\n    stack.forEach(function (habit, i) {\n      habitsInJSX.push(React.createElement(Habit, {\n        action: habit.action,\n        cue: habit.cue,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    });\n    return habitsInJSX;\n  } else {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Tap + to add a habit\");\n  }\n} // function toggleStack(id){\n//   // document.querySelector(`stack-${id}`).classList.toggle('stackVisible')\n//   console.log('id is : ', id);\n// }\n// <div className=\"toggle\" onClick={() => props.toggleStack(props.id)}}>\n\n\nfunction Stack(props) {\n  return React.createElement(\"div\", {\n    className: \"stack\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stackHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"toggle\",\n    onClick: function onClick() {\n      return props.toggleStack(props.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"h3\", {\n    className: \"stackName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.name, \"!\")), React.createElement(AnimateHeight, {\n    duration: 500,\n    key: props.id,\n    height: props.height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stackBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, displayHabits(props.habits))), React.createElement(\"div\", {\n    className: \"stackBottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stackLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"streakName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Streak\"), React.createElement(\"p\", {\n    className: \"streakCount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.name)));\n}\n\nexport default Stack;","map":{"version":3,"sources":["/Users/benreimer/Google Drive/Year4Sem2/IXDS2/stacks-v2/src/Components/Stack.js"],"names":["React","Habit","AnimateHeight","displayHabits","stack","length","habitsInJSX","forEach","habit","i","push","action","cue","Stack","props","toggleStack","id","name","height","habits"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAGA;;;;;;AAMA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAE3B,MAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtB,QAAIC,WAAW,GAAG,EAAlB;AACAF,IAAAA,KAAK,CAACG,OAAN,CAAc,UAACC,KAAD,EAAQC,CAAR,EAAc;AAC1BH,MAAAA,WAAW,CAACI,IAAZ,CACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEF,KAAK,CAACG,MADhB;AAEE,QAAA,GAAG,EAAEH,KAAK,CAACI,GAFb;AAGE,QAAA,GAAG,EAAEH,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KAPD;AAQA,WAAOH,WAAP;AACD,GAXD,MAYK;AACH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;AACF,C,CAID;AACA;AACA;AACA;AAIA;;;AAEA,SAASO,KAAT,CAAeC,KAAf,EAAqB;AAEnB,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAMA,KAAK,CAACC,WAAN,CAAkBD,KAAK,CAACE,EAAxB,CAAN;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BF,KAAK,CAACG,IAAjC,MANF,CADF,EASE,oBAAC,aAAD;AACA,IAAA,QAAQ,EAAG,GADX;AAEA,IAAA,GAAG,EAAEH,KAAK,CAACE,EAFX;AAGA,IAAA,MAAM,EAAGF,KAAK,CAACI,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,aAAa,CAACW,KAAK,CAACK,MAAP,CADhB,CALF,CATF,EAkBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BL,KAAK,CAACG,IAAlC,CAHF,CAlBF,CADF;AA0BD;;AAED,eAAeJ,KAAf","sourcesContent":["\nimport React from 'react';\nimport '../App.css';\nimport Habit from './Habit';\nimport AnimateHeight from 'react-animate-height';\n\n\n/**************\nStack Component\n\nis it bad I affect the DOM with the toggleStack() ?\n**************/\n\nfunction displayHabits(stack){\n\n  if (stack.length !== 0) {\n    let habitsInJSX = [];\n    stack.forEach((habit, i) => {\n      habitsInJSX.push(\n        <Habit\n          action={habit.action}\n          cue={habit.cue}\n          key={i}/>\n      )\n    });\n    return habitsInJSX;\n  }\n  else {\n    return <p>Tap + to add a habit</p>\n  }\n}\n\n\n\n// function toggleStack(id){\n//   // document.querySelector(`stack-${id}`).classList.toggle('stackVisible')\n//   console.log('id is : ', id);\n// }\n\n\n\n// <div className=\"toggle\" onClick={() => props.toggleStack(props.id)}}>\n\nfunction Stack(props){\n\n  return (\n    <div className=\"stack\">\n      <div className=\"stackHeader\">\n        <div className=\"toggle\" onClick={() => props.toggleStack(props.id)}>\n          <div className=\"bar\"></div>\n          <div className=\"bar\"></div>\n          <div className=\"bar\"></div>\n        </div>\n        <h3 className=\"stackName\">{props.name}!</h3>\n      </div>\n      <AnimateHeight\n      duration={ 500 }\n      key={props.id}\n      height={ props.height }\n      >\n        <div className=\"stackBody\">\n          {displayHabits(props.habits)}\n        </div>\n      </AnimateHeight >\n      <div className=\"stackBottom\">\n        <div className=\"stackLine\"></div>\n        <p className=\"streakName\">Streak</p>\n        <p className=\"streakCount\">{props.name}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Stack;\n"]},"metadata":{},"sourceType":"module"}