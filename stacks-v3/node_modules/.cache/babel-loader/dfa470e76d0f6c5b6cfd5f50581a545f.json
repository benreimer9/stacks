{"ast":null,"code":"var _jsxFileName = \"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/src/Components/Stack.js\";\nimport React from 'react';\nimport '../App.css';\nimport Habit from './Habit';\nimport AnimateHeight from 'react-animate-height';\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\n/**************\nStack Component\n\n\n**************/\n// function displayHabits(stack){\n//\n//   if (stack.length !== 0) {\n//     let habitsInJSX = [];\n//     stack.forEach((habit, i) => {\n//       habitsInJSX.push(\n//         <Habit\n//           action={habit.action}\n//           cue={habit.cue}\n//           key={i}/>\n//       )\n//     });\n//     return habitsInJSX;\n//   }\n//   else {\n//     return <p>Tap + to add a habit</p>\n//   }\n// }\n// <div className=\"stack\">\n//   <div className=\"stackHeader\">\n//     <div className=\"toggle\" onClick={() => props.toggleStack(props.id)}>\n//       <div className=\"bar\"></div>\n//       <div className=\"bar\"></div>\n//       <div className=\"bar\"></div>\n//     </div>\n//     <h3 className=\"stackName\">{props.name}!</h3>\n//   </div>\n//   <AnimateHeight\n//   duration={ 500 }\n//   key={props.id}\n//   height={ props.height }\n//   >\n//     <div className=\"stackBody\">\n//       <SortableList items={props.habits} onSortEnd={props.onSortEnd}  />\n//     </div>\n//   </AnimateHeight >\n//   <div className=\"stackBottom\">\n//     <div className=\"stackLine\"></div>\n//     <p className=\"streakName\">Streak</p>\n//     <p className=\"streakCount\">{props.streak}</p>\n//   </div>\n// </div>\n\nfunction Stack(props) {\n  return React.createElement(React.Fragment, {\n    key: props.stacksIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.stacksInfo[props.stacksIndex].name), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.stacksItems.map(function (item, i) {\n    return React.createElement(Habit, {\n      key: i,\n      value: item,\n      index: i,\n      collection: props.stacksIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  })));\n}\n\nexport default Stack;","map":{"version":3,"sources":["/Users/benreimer/Google Drive/Year4Sem2/IXDS2/Develop/stacks-v3/src/Components/Stack.js"],"names":["React","Habit","AnimateHeight","SortableContainer","SortableElement","arrayMove","Stack","props","stacksIndex","stacksInfo","name","stacksItems","map","item","i"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,EAA4CC,SAA5C,QAA4D,oBAA5D;AAGA;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAEnB,SAGE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAAK,CAACC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,KAAK,CAACE,UAAN,CAAiBF,KAAK,CAACC,WAAvB,EAAoCE,IAA7C,CADE,EAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAOC,CAAP;AAAA,WACrB,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,KAAK,EAAED,IAFT;AAGE,MAAA,KAAK,EAAEC,CAHT;AAIE,MAAA,UAAU,EAAEP,KAAK,CAACC,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB;AAAA,GAAtB,CADH,CAFE,CAHF;AAiBD;;AAED,eAAeF,KAAf","sourcesContent":["\nimport React from 'react';\nimport '../App.css';\nimport Habit from './Habit';\nimport AnimateHeight from 'react-animate-height';\nimport {SortableContainer, SortableElement, arrayMove} from 'react-sortable-hoc';\n\n\n/**************\nStack Component\n\n\n**************/\n\n// function displayHabits(stack){\n//\n//   if (stack.length !== 0) {\n//     let habitsInJSX = [];\n//     stack.forEach((habit, i) => {\n//       habitsInJSX.push(\n//         <Habit\n//           action={habit.action}\n//           cue={habit.cue}\n//           key={i}/>\n//       )\n//     });\n//     return habitsInJSX;\n//   }\n//   else {\n//     return <p>Tap + to add a habit</p>\n//   }\n// }\n\n\n\n// <div className=\"stack\">\n//   <div className=\"stackHeader\">\n//     <div className=\"toggle\" onClick={() => props.toggleStack(props.id)}>\n//       <div className=\"bar\"></div>\n//       <div className=\"bar\"></div>\n//       <div className=\"bar\"></div>\n//     </div>\n//     <h3 className=\"stackName\">{props.name}!</h3>\n//   </div>\n//   <AnimateHeight\n//   duration={ 500 }\n//   key={props.id}\n//   height={ props.height }\n//   >\n//     <div className=\"stackBody\">\n//       <SortableList items={props.habits} onSortEnd={props.onSortEnd}  />\n//     </div>\n//   </AnimateHeight >\n//   <div className=\"stackBottom\">\n//     <div className=\"stackLine\"></div>\n//     <p className=\"streakName\">Streak</p>\n//     <p className=\"streakCount\">{props.streak}</p>\n//   </div>\n// </div>\n\nfunction Stack(props){\n\n  return (\n\n\n    <React.Fragment key={props.stacksIndex}>\n  <strong>{props.stacksInfo[props.stacksIndex].name}</strong>\n  <ul>\n    {props.stacksItems.map((item, i) => (\n      <Habit\n        key={i}\n        value={item}\n        index={i}\n        collection={props.stacksIndex}\n      />\n    ))}\n  </ul>\n</React.Fragment>\n  )\n}\n\nexport default Stack;\n"]},"metadata":{},"sourceType":"module"}