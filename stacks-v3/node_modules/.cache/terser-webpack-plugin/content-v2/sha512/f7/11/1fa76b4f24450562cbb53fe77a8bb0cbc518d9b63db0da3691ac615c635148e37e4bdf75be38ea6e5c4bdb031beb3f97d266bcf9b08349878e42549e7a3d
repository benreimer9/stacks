{"map":"{\"version\":3,\"sources\":[\"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/stacks-v2/src/Components/Habit.js\",\"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/stacks-v2/src/Components/Stack.js\",\"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/stacks-v2/src/Components/ViewStacks.js\",\"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/stacks-v2/src/App.js\",\"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/stacks-v2/src/serviceWorker.js\",\"/Users/benreimer/Google Drive/Year4Sem2/IXDS2/stacks-v2/src/index.js\"],\"names\":[\"Habit\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"cue\",\"action\",\"Stack\",\"onClick\",\"toggleStack\",\"id\",\"name\",\"AnimateHeight_default\",\"duration\",\"key\",\"height\",\"stack\",\"length\",\"habitsInJSX\",\"forEach\",\"habit\",\"i\",\"push\",\"Components_Habit\",\"displayHabits\",\"habits\",\"View_Stacks\",\"displayStacks\",\"stacks\",\"stacksInJSX\",\"Components_Stack\",\"_this\",\"addHabit\",\"itemPos\",\"stackID\",\"setState\",\"inputtingNewHabit\",\"state\",\"newHabit\",\"newStack\",\"splice\",\"result\",\"fn\",\"logHabits\",\"h\",\"newH\",\"map\",\"console\",\"log\",\"stacksToDisplay\",\"this\",\"Fragment\",\"Component\",\"App\",\"streak\",\"makingNewHabit\",\"oldStack\",\"ViewStacks\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"\\nimport React from 'react';\\nimport '../App.css';\\n\\n// <div className={`circle ${props.result}`} onClick={() => {props.logHabits(props.itemPos, props.stackID)}}></div>\\n\\nfunction Habit(props){\\n  return (\\n    <div className=\\\"habit\\\">\\n      <div className=\\\"circle\\\"></div>\\n      <div className=\\\"habitText\\\">\\n          <div className=\\\"cue\\\">{props.cue}</div>\\n          <div className=\\\"action\\\">{props.action}</div>\\n      </div>\\n  </div>\\n  )\\n}\\n\\n\\nexport default Habit;\\n\",\"\\nimport React from 'react';\\nimport '../App.css';\\nimport Habit from './Habit';\\nimport AnimateHeight from 'react-animate-height';\\n\\n\\n/**************\\nStack Component\\n\\nis it bad I affect the DOM with the toggleStack() ?\\n**************/\\n\\nfunction displayHabits(stack){\\n\\n  if (stack.length !== 0) {\\n    let habitsInJSX = [];\\n    stack.forEach((habit, i) => {\\n      habitsInJSX.push(\\n        <Habit\\n          action={habit.action}\\n          cue={habit.cue}\\n          key={i}/>\\n      )\\n    });\\n    return habitsInJSX;\\n  }\\n  else {\\n    return <p>Tap + to add a habit</p>\\n  }\\n}\\n\\n\\n\\n// function toggleStack(id){\\n//   // document.querySelector(`stack-${id}`).classList.toggle('stackVisible')\\n//   console.log('id is : ', id);\\n// }\\n\\n\\n\\n// <div className=\\\"toggle\\\" onClick={() => props.toggleStack(props.id)}}>\\n\\nfunction Stack(props){\\n\\n  return (\\n    <div className=\\\"stack\\\">\\n      <div className=\\\"stackHeader\\\">\\n        <div className=\\\"toggle\\\" onClick={() => props.toggleStack(props.id)}>\\n          <div className=\\\"bar\\\"></div>\\n          <div className=\\\"bar\\\"></div>\\n          <div className=\\\"bar\\\"></div>\\n        </div>\\n        <h3 className=\\\"stackName\\\">{props.name}!</h3>\\n      </div>\\n      <AnimateHeight\\n      duration={ 500 }\\n      key={props.key}\\n      height={ props.height }\\n      >\\n        <div className=\\\"stackBody\\\">\\n          {displayHabits(props.habits)}\\n        </div>\\n      </AnimateHeight >\\n      <div className=\\\"stackBottom\\\">\\n        <div className=\\\"stackLine\\\"></div>\\n        <p className=\\\"streakName\\\">Streak</p>\\n        <p className=\\\"streakCount\\\">0</p>\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default Stack;\\n\",\"import React, { Component } from 'react';\\nimport Stack from './Stack';\\nimport '../App.css'\\nimport AnimateHeight from 'react-animate-height';\\n\\n\\n/**************\\nHolds the Daily Stacks View\\n\\n\\nTO DO\\n\\n- 'add' button\\n  - addOptions\\n  - cancel\\n\\n- display stacks and habits\\n\\n- display empty stacks component if no stacks\\n\\n**************/\\n\\n\\nclass View_Stacks extends Component {\\n\\n\\n\\n\\n  displayStacks = (stacks) => {\\n\\n    if (stacks.length !== 0) {\\n\\n      let stacksInJSX = [];\\n      let visiblility = null;\\n\\n      stacks.forEach((stack, i) => {\\n\\n        stacksInJSX.push(\\n          // <AnimateHeight\\n          // duration={ 500 }\\n          // key={i}\\n          // height={ stack.height }\\n          // >\\n          <Stack\\n            name={stack.name}\\n            key={i}\\n            id={i}\\n            height={stack.height}\\n            habits={stack.stack.habits}\\n            toggleStack={this.props.toggleStack}\\n\\n            />\\n          // </AnimateHeight >\\n        )\\n      });\\n      return stacksInJSX;\\n    }\\n    else {\\n      return <p>Tap + to add stacks, habits, & friends</p>\\n    }\\n  }\\n\\n\\n\\n\\n  //to draw from :\\n  addHabit = (itemPos, stackID) => {\\n    //recognize which was clicked\\n    //input module (toggle off touchspots)\\n    //submit to right place\\n\\n    //console.log(\\\"item pos is : \\\" + itemPos + \\\" and stackID is : \\\" + stackID);\\n\\n    this.setState({inputtingNewHabit:true});\\n\\n\\n    //but this should only be taken once form is filled out.\\n\\n    let cue = this.state.newHabit.cue;\\n    let action = this.state.newHabit.action;\\n\\n\\n\\n    let newStack = this.state.stacks;\\n    newStack[stackID].stack.habits.splice(itemPos, 0, {cue:cue, action:action, result:\\\"blank\\\", fn:\\\"\\\"});\\n    this.setState({stacks : newStack});\\n    // this.cancelNew();\\n  }\\n  logHabits = (itemPos, stackID) => {\\n\\n    let h = this.state.stacks[stackID].stack.habits;\\n\\n    let newH = h.map((habit, i) => {\\n      if (i <= itemPos){\\n        habit.result = \\\"success\\\";\\n      }\\n      else {\\n        habit.result =\\\"failure\\\";\\n      }\\n    });\\n\\n    if (itemPos === h.length-1){\\n      console.log(\\\"SUCCESS\\\");\\n    }\\n\\n    this.setState({h:newH});\\n\\n  }\\n\\n\\n\\n\\n  render() {\\n\\n    /**************\\n    Logic\\n\\n    - Check if there are any stacks available in state\\n      - no? emptyStacks message\\n      - yes? display\\n\\n\\n    - Add button clicked\\n      - show new stack touchPoint\\n      - is there\\n\\n    **************/\\n\\n    let stacksToDisplay = this.displayStacks(this.props.stacks);\\n\\n\\n    return (\\n      <>\\n        <div className=\\\"habitsTopBar\\\">\\n          <p className=\\\"title\\\">Dec. 6th</p>\\n          <button className=\\\"add\\\"></button>\\n        </div>\\n\\n        {stacksToDisplay}\\n\\n\\n      </>\\n    );\\n  }\\n}\\n\\n\\n\\nexport default View_Stacks;\\n\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport View_Stacks from './Components/ViewStacks';\\nimport AnimateHeight from 'react-animate-height';\\n\\n/**************\\nApp.js composed of :\\n\\n1) State for all aspects of app\\n2) App Render\\n**************/\\n\\n\\nclass App extends Component {\\n\\n\\n\\n  state = {\\n    stacks : [\\n      {stack :\\n        {\\n          streak:0,\\n          habits:[\\n            {cue:\\\"7:00AM\\\", action:\\\"jog\\\", result:\\\"blank\\\", fn:\\\"\\\"},\\n            {cue:\\\"then\\\", action:\\\"shower\\\", result:\\\"blank\\\", fn:\\\"\\\"},\\n            {cue:\\\"then\\\", action:\\\"breakfast\\\", result:\\\"blank\\\", fn:\\\"\\\"},\\n          ],\\n        },\\n        name : \\\"Morning Routine\\\",\\n        height : \\\"auto\\\",\\n      },\\n      {stack :\\n        {\\n          streak:0,\\n          habits:[\\n            {cue:\\\"7:00AM\\\", action:\\\"jog\\\", result:\\\"blank\\\", fn:\\\"\\\"},\\n            {cue:\\\"then\\\", action:\\\"shower\\\", result:\\\"blank\\\", fn:\\\"\\\"},\\n            {cue:\\\"then\\\", action:\\\"breakfast\\\", result:\\\"blank\\\", fn:\\\"\\\"},\\n          ],\\n        },\\n        name : \\\"Evening Routine\\\",\\n        height : \\\"auto\\\",\\n      },\\n\\n    ],\\n    makingNewHabit : false,\\n    inputtingNewHabit : false,\\n    newHabit : {\\n      cue:\\\"then\\\",\\n      action:\\\"\\\",\\n      itemPos:null,\\n      stackID:null,\\n    }\\n  }\\n\\n\\n\\n  toggleStack = (id) => {\\n\\n    let oldStack = this.state.stacks[id];\\n    let newStack = oldStack;\\n\\n    newStack.height = oldStack.height === 10 ? 'auto' : 10;\\n\\n    this.setState({\\n      oldStack : newStack\\n    })\\n  }\\n\\n\\n\\n\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <View_Stacks stacks={this.state.stacks} toggleStack={this.toggleStack}/>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1:function(e,t,a){},10:function(e,t,a){e.exports=a(23)},16:function(e,t,a){},23:function(e,t,a){\"use strict\";a.r(t);var n=a(0),c=a.n(n),s=a(9),i=a.n(s),r=(a(16),a(3)),l=a(4),o=a(6),u=a(5),m=a(7);a(1);var h=function(e){return c.a.createElement(\"div\",{className:\"habit\"},c.a.createElement(\"div\",{className:\"circle\"}),c.a.createElement(\"div\",{className:\"habitText\"},c.a.createElement(\"div\",{className:\"cue\"},e.cue),c.a.createElement(\"div\",{className:\"action\"},e.action)))},k=a(2),b=a.n(k);var d=function(e){return c.a.createElement(\"div\",{className:\"stack\"},c.a.createElement(\"div\",{className:\"stackHeader\"},c.a.createElement(\"div\",{className:\"toggle\",onClick:function(){return e.toggleStack(e.id)}},c.a.createElement(\"div\",{className:\"bar\"}),c.a.createElement(\"div\",{className:\"bar\"}),c.a.createElement(\"div\",{className:\"bar\"})),c.a.createElement(\"h3\",{className:\"stackName\"},e.name,\"!\")),c.a.createElement(b.a,{duration:500,key:e.key,height:e.height},c.a.createElement(\"div\",{className:\"stackBody\"},function(e){if(0!==e.length){var t=[];return e.forEach(function(e,a){t.push(c.a.createElement(h,{action:e.action,cue:e.cue,key:a}))}),t}return c.a.createElement(\"p\",null,\"Tap + to add a habit\")}(e.habits))),c.a.createElement(\"div\",{className:\"stackBottom\"},c.a.createElement(\"div\",{className:\"stackLine\"}),c.a.createElement(\"p\",{className:\"streakName\"},\"Streak\"),c.a.createElement(\"p\",{className:\"streakCount\"},\"0\")))},g=function(e){function t(){var e,a;Object(r.a)(this,t);for(var n=arguments.length,s=new Array(n),i=0;i<n;i++)s[i]=arguments[i];return(a=Object(o.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(s)))).displayStacks=function(e){if(0!==e.length){var t=[];return e.forEach(function(e,n){t.push(c.a.createElement(d,{name:e.name,key:n,id:n,height:e.height,habits:e.stack.habits,toggleStack:a.props.toggleStack}))}),t}return c.a.createElement(\"p\",null,\"Tap + to add stacks, habits, & friends\")},a.addHabit=function(e,t){a.setState({inputtingNewHabit:!0});var n=a.state.newHabit.cue,c=a.state.newHabit.action,s=a.state.stacks;s[t].stack.habits.splice(e,0,{cue:n,action:c,result:\"blank\",fn:\"\"}),a.setState({stacks:s})},a.logHabits=function(e,t){var n=a.state.stacks[t].stack.habits,c=n.map(function(t,a){t.result=a<=e?\"success\":\"failure\"});e===n.length-1&&console.log(\"SUCCESS\"),a.setState({h:c})},a}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this.displayStacks(this.props.stacks);return c.a.createElement(c.a.Fragment,null,c.a.createElement(\"div\",{className:\"habitsTopBar\"},c.a.createElement(\"p\",{className:\"title\"},\"Dec. 6th\"),c.a.createElement(\"button\",{className:\"add\"})),e)}}]),t}(n.Component),f=function(e){function t(){var e,a;Object(r.a)(this,t);for(var n=arguments.length,c=new Array(n),s=0;s<n;s++)c[s]=arguments[s];return(a=Object(o.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(c)))).state={stacks:[{stack:{streak:0,habits:[{cue:\"7:00AM\",action:\"jog\",result:\"blank\",fn:\"\"},{cue:\"then\",action:\"shower\",result:\"blank\",fn:\"\"},{cue:\"then\",action:\"breakfast\",result:\"blank\",fn:\"\"}]},name:\"Morning Routine\",height:\"auto\"},{stack:{streak:0,habits:[{cue:\"7:00AM\",action:\"jog\",result:\"blank\",fn:\"\"},{cue:\"then\",action:\"shower\",result:\"blank\",fn:\"\"},{cue:\"then\",action:\"breakfast\",result:\"blank\",fn:\"\"}]},name:\"Evening Routine\",height:\"auto\"}],makingNewHabit:!1,inputtingNewHabit:!1,newHabit:{cue:\"then\",action:\"\",itemPos:null,stackID:null}},a.toggleStack=function(e){var t=a.state.stacks[e],n=t;n.height=10===t.height?\"auto\":10,a.setState({oldStack:n})},a}return Object(m.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(g,{stacks:this.state.stacks,toggleStack:this.toggleStack}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(c.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,2,1]]]);","extractedComments":[]}